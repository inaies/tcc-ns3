// ... (após as definições das aplicações)

// 1. Definições:
Ipv6Address ap2Addr = apInterfaces2.GetAddress(0, 1);
Ptr<Node> client1 = wifiStaNodes2.Get(0);
Ptr<Ipv6> clientIpv6 = client1->GetObject<Ipv6>();
Ptr<Ipv6StaticRouting> srClient = ipv6StaticRouting.GetStaticRouting(clientIpv6); 
uint32_t clientIfIndex = clientIpv6->GetInterfaceForDevice(staDevices2.Get(0));

// 2. Agendamento do UP/DOWN do AP2:
Ptr<Ipv6> ipv6Ap2 = wifiApNode2.Get(0)->GetObject<Ipv6>(); 
int32_t ifIndexAp2 = ipv6Ap2->GetInterfaceForDevice(apDevices2.Get(0));
Simulator::Schedule(Seconds(30.0), &Ipv6::SetDown, ipv6Ap2, ifIndexAp2);
Simulator::Schedule(Seconds(32.0), &Ipv6::SetUp, ipv6Ap2, ifIndexAp2);

// 3. Reinstalação da Rota (A correção principal):
auto reinstallRoute = [srClient, ap2Addr, clientIfIndex](){
    // Remove a rota default atual
    srClient->RemoveRoute(srClient->GetDefaultRoute()); 
    
    // Reinstala a rota default.
    srClient->SetDefaultRoute(ap2Addr, clientIfIndex); 
    NS_LOG_INFO("Time " << Simulator::Now().GetSeconds() << "s: Reinstalled default route on client 1.");
};

Simulator::Schedule(Seconds(32.1), reinstallRoute);

// ... (Restante do código)
